IntegerLiteral=1
CharacterLiteral=2
FloatingLiteral=3
StringLiteral=4
BooleanLiteral=5
PointerLiteral=6
UserDefinedLiteral=7
IncludeDirective=8
MultiLineMacro=9
Directive=10
Alignas=11
Alignof=12
Asm=13
Auto=14
Bool=15
Break=16
Case=17
Catch=18
Char=19
Char16=20
Char32=21
Class=22
Const=23
Constexpr=24
Const_cast=25
Continue=26
Decltype=27
Default=28
Delete=29
Do=30
Double=31
Dynamic_cast=32
Else=33
Enum=34
Explicit=35
Export=36
Extern=37
False_=38
Final=39
Float=40
For=41
Friend=42
Goto=43
If=44
Inline=45
Include=46
Int=47
Long=48
Mutable=49
Namespace=50
New=51
Noexcept=52
Nullptr=53
Operator=54
Override=55
Private=56
Protected=57
Public=58
Register=59
Reinterpret_cast=60
Return=61
Short=62
Signed=63
Sizeof=64
Static=65
Static_assert=66
Static_cast=67
Struct=68
Switch=69
Template=70
This=71
Thread_local=72
Throw=73
True_=74
Try=75
Typedef=76
Typeid_=77
Typename_=78
Union=79
Unsigned=80
Using=81
Virtual=82
Void=83
Volatile=84
Wchar=85
While=86
LeftParen=87
RightParen=88
LeftBracket=89
RightBracket=90
LeftBrace=91
RightBrace=92
DoubleLeftBracket=93
DoubleRightBracket=94
Plus=95
Minus=96
Star=97
Div=98
Mod=99
Caret=100
And=101
Or=102
Tilde=103
Not=104
Assign=105
Less=106
Greater=107
PlusAssign=108
MinusAssign=109
StarAssign=110
DivAssign=111
ModAssign=112
XorAssign=113
AndAssign=114
OrAssign=115
LeftShiftAssign=116
RightShiftAssign=117
Equal=118
NotEqual=119
LessEqual=120
GreaterEqual=121
AndAnd=122
OrOr=123
PlusPlus=124
MinusMinus=125
Comma=126
ArrowStar=127
Arrow=128
Question=129
Colon=130
Doublecolon=131
Semi=132
Dot=133
DotStar=134
Ellipsis=135
Identifier=136
DecimalLiteral=137
OctalLiteral=138
HexadecimalLiteral=139
BinaryLiteral=140
Integersuffix=141
UserDefinedIntegerLiteral=142
UserDefinedFloatingLiteral=143
UserDefinedStringLiteral=144
UserDefinedCharacterLiteral=145
Whitespace=146
Newline=147
BlockCommentStart=148
BlockCommentBody=149
BlockCommentEnd=150
LineComment=151
ClassExpression=152
'alignas'=11
'alignof'=12
'asm'=13
'auto'=14
'bool'=15
'break'=16
'case'=17
'catch'=18
'char'=19
'char16_t'=20
'char32_t'=21
'class'=22
'const'=23
'constexpr'=24
'const_cast'=25
'continue'=26
'decltype'=27
'default'=28
'delete'=29
'do'=30
'double'=31
'dynamic_cast'=32
'else'=33
'enum'=34
'explicit'=35
'export'=36
'extern'=37
'false'=38
'final'=39
'float'=40
'for'=41
'friend'=42
'goto'=43
'if'=44
'inline'=45
'include'=46
'int'=47
'long'=48
'mutable'=49
'namespace'=50
'new'=51
'noexcept'=52
'nullptr'=53
'operator'=54
'override'=55
'private'=56
'protected'=57
'public'=58
'register'=59
'reinterpret_cast'=60
'return'=61
'short'=62
'signed'=63
'sizeof'=64
'static'=65
'static_assert'=66
'static_cast'=67
'struct'=68
'switch'=69
'template'=70
'this'=71
'thread_local'=72
'throw'=73
'true'=74
'try'=75
'typedef'=76
'typeid'=77
'typename'=78
'union'=79
'unsigned'=80
'using'=81
'virtual'=82
'void'=83
'volatile'=84
'wchar_t'=85
'while'=86
'('=87
')'=88
'['=89
']'=90
'{'=91
'}'=92
'[['=93
']]'=94
'+'=95
'-'=96
'*'=97
'/'=98
'%'=99
'^'=100
'&'=101
'|'=102
'~'=103
'='=105
'<'=106
'>'=107
'+='=108
'-='=109
'*='=110
'/='=111
'%='=112
'^='=113
'&='=114
'|='=115
'<<='=116
'>>='=117
'=='=118
'!='=119
'<='=120
'>='=121
'++'=124
'--'=125
','=126
'->*'=127
'->'=128
'?'=129
':'=130
'::'=131
';'=132
'.'=133
'.*'=134
'...'=135
'*/'=150
